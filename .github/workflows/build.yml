name: Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.24.5'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        VERSION=${GITHUB_SHA::7}
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        fi

        BINARY_NAME=xp-provider-gen
        if [ "${{ matrix.goos }}" = "windows" ]; then
          BINARY_NAME="${BINARY_NAME}.exe"
        fi

        OUTPUT_PATH="dist/${BINARY_NAME}_${{ matrix.goos }}_${{ matrix.goarch }}"
        if [ "${{ matrix.goos }}" = "windows" ]; then
          OUTPUT_PATH="${OUTPUT_PATH}.exe"
        fi

        mkdir -p dist

        go build \
          -ldflags "-X github.com/cychiang/xp-provider-gen/pkg/version.Version=${VERSION} -X github.com/cychiang/xp-provider-gen/pkg/version.GitCommit=${GITHUB_SHA} -X github.com/cychiang/xp-provider-gen/pkg/version.BuildDate=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
          -trimpath \
          -o "${OUTPUT_PATH}" \
          ./cmd/xp-provider-gen

        # Create checksums
        cd dist
        sha256sum "${BINARY_NAME}_${{ matrix.goos }}_${{ matrix.goarch }}$([ "${{ matrix.goos }}" = "windows" ] && echo ".exe" || echo "")" > "${BINARY_NAME}_${{ matrix.goos }}_${{ matrix.goarch }}.sha256"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/*
        retention-days: 30

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Download Linux AMD64 binary
      uses: actions/download-artifact@v4
      with:
        name: binaries-linux-amd64
        path: dist/

    - name: Build Docker image
      run: |
        VERSION=${GITHUB_SHA::7}
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        fi

        # Create Dockerfile
        cat > Dockerfile << 'EOF'
        FROM alpine:3.19
        RUN apk --no-cache add ca-certificates git
        WORKDIR /root/
        COPY dist/xp-provider-gen_linux_amd64 /usr/local/bin/xp-provider-gen
        RUN chmod +x /usr/local/bin/xp-provider-gen
        ENTRYPOINT ["xp-provider-gen"]
        EOF

        docker build -t xp-provider-gen:${VERSION} .
        docker save xp-provider-gen:${VERSION} | gzip > xp-provider-gen-${VERSION}.tar.gz

    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: xp-provider-gen-*.tar.gz
        retention-days: 30